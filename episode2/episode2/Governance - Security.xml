<export><workspace name="Governance - Security"><query name="Create DBA Role" focus="false" listorder="6" taborder="5" active="true" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">var config = 
    {
      "role-name":"DBA",
      "role": ["GLOBAL"]
    };

var options = {
  authentication: {
    'method': 'digest',
    'username': 'admin',
    'password': 'admin'
  },
  data: xdmp.quote(config), //xdmp.quote() formats the config object as a string so the REST endpoint understands it
  headers : {
    'content-type' : 'application/json'
  }
};

xdmp.httpPost('http://localhost:8002/manage/v2/roles', options);</query><query name="Create France Role" focus="true" listorder="1" taborder="1" active="true" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">
'use strict';

var config = 
    {
      "role-name":"FRANCE"
    };

var options = {
  authentication: {
    'method': 'digest',
    'username': 'admin',
    'password': 'admin'
  },
  data: xdmp.quote(config), //xdmp.quote() formats the config object as a string so the REST endpoint understands it
  headers : {
    'content-type' : 'application/json'
  }
};

xdmp.httpPost('http://localhost:8002/manage/v2/roles', options);</query><query name="Create Europe Role" focus="false" listorder="2" taborder="2" active="true" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">var config = 
    {
      "role-name":"EUROPE",
      "role": ["FRANCE"]
    };

var options = {
  authentication: {
    'method': 'digest',
    'username': 'admin',
    'password': 'admin'
  },
  data: xdmp.quote(config), //xdmp.quote() formats the config object as a string so the REST endpoint understands it
  headers : {
    'content-type' : 'application/json'
  }
};

xdmp.httpPost('http://localhost:8002/manage/v2/roles', options);</query><query name="Create US Role" focus="false" listorder="3" taborder="3" active="true" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">
'use strict';

var config = 
    {
      "role-name":"US"
    };

var options = {
  authentication: {
    'method': 'digest',
    'username': 'admin',
    'password': 'admin'
  },
  data: xdmp.quote(config), //xdmp.quote() formats the config object as a string so the REST endpoint understands it
  headers : {
    'content-type' : 'application/json'
  }
};

xdmp.httpPost('http://localhost:8002/manage/v2/roles', options);</query><query name="Create Americas Role" focus="false" listorder="4" taborder="0" active="false" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">'use strict';&#13;&#13;</query><query name="Create Global Role" focus="false" listorder="5" taborder="4" active="true" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">var config = 
    {
      "role-name":"GLOBAL",
      "role": ["EUROPE", "US"]
    };

var options = {
  authentication: {
    'method': 'digest',
    'username': 'admin',
    'password': 'admin'
  },
  data: xdmp.quote(config), //xdmp.quote() formats the config object as a string so the REST endpoint understands it
  headers : {
    'content-type' : 'application/json'
  }
};

xdmp.httpPost('http://localhost:8002/manage/v2/roles', options);</query><query name="Create French Call Center User" focus="false" listorder="7" taborder="6" active="true" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">var config = 
    {
      "user-name":"FREDERIC",
      "password":"PASSWORD",
      "role": [ "FRANCE" ]
    };

var options = {
  authentication: {
    'method': 'digest',
    'username': 'admin',
    'password': 'admin'
  },
  data: xdmp.quote(config), //xdmp.quote() formats the config object as a string so the REST endpoint understands it
  headers : {
    'content-type' : 'application/json'
  }
};

xdmp.httpPost('http://localhost:8002/manage/v2/users', options);
</query><query name="Create DBA User" focus="false" listorder="8" taborder="7" active="true" database="8730027353966825527" server="12339327164846428370" database-name="Documents" server-name="App-Services" mode="javascript">var config = 
    {
      "user-name":"RUTH",
      "password":"PASSWORD",
      "role": [ "DBA" ]
    };

var options = {
  authentication: {
    'method': 'digest',
    'username': 'admin',
    'password': 'admin'
  },
  data: xdmp.quote(config), //xdmp.quote() formats the config object as a string so the REST endpoint understands it
  headers : {
    'content-type' : 'application/json'
  }
};

xdmp.httpPost('http://localhost:8002/manage/v2/users', options);
</query><query name="Test Role Based Access Control" focus="false" listorder="9" taborder="8" active="true" database="14286335369416162840" server="17865417488314897420" database-name="data-hub-STAGING" server-name="data-hub-STAGING" mode="javascript">'use strict';

xdmp.eval(
  'fn.collection("customer")', 
  null,
  {'userId' : xdmp.user('FREDERIC')}
);</query><query name="Create Protected Paths" focus="false" listorder="10" taborder="9" active="true" database="14097730363918796783" server="13279386827462242304" database-name="Security" server-name="Admin" mode="javascript">// Create protected paths

'use strict';
declareUpdate();

if (xdmp.databaseName(xdmp.database()) === 'Security') {

  const sec = require('/MarkLogic/security');
  const paths = ['//provenance', '//lineage', '//instance', '//attachments'];
  const namespaces = null;
  const permissions = [xdmp.permission('DBA', 'read', 'element')];
    
  paths.forEach(function(createPath) {
    sec.protectPath(createPath, namespaces, permissions);
  });
  
  "Finished";
  
} else {
  'Please select the Security database and run this script again.'; 
}
</query></workspace></export>
